TITLE:: Alga
summary:: live coding environment focused on the interpolation between sonic nodes
categories:: Alga
related:: Classes/AlgaNode, Classes/AlgaPattern, Classes/AlgaSynthDef, Classes/AlgaPatch, Classes/AlgaServerOptions, Classes/AlgaProxySpace


DESCRIPTION::
note::
For link::Classes/Alga:: to work correctly, it is required to install the emphasis::AlgaUGens:: plugin extensions. To do so, download the emphasis::AlgaUGens:: zip file from
https://github.com/vitreo12/AlgaUGens/releases/tag/v1.0.0 and extract it
to your code::Platform.userExtensionDir::
::

emphasis::Alga:: is a new live coding environment whose focus is on describing dynamic connections between nodes. By linking link::Classes/AlgaNode::s together, it is possible to create a fluid, complex network of sonic interactions. What makes emphasis::Alga:: different from other environments is its interpolation capabilities. In fact, the nature of the connections between link::Classes/AlgaNode::s arises from continuous processes of interpolation between the current states of the system and future ones, over specified windows of time.
link::Classes/AlgaNode::'s sister class, link::Classes/AlgaPattern::, represents
the polyphonic counterpart to this paradigm.

Check out the link::Classes/AlgaNode:: and link::Classes/AlgaPattern:: help files for examples on usage.

CLASSMETHODS::

METHOD:: boot
Boot emphasis::Alga:: on a specified link::Classes/Server::. If not specified, Server.default will be used.
ARGUMENT:: onBoot
Execute a link::Classes/Function:: on boot.
ARGUMENT:: server
The link::Classes/Server:: to boot emphasis::Alga:: on.
ARGUMENT:: algaServerOptions
An instance of link::Classes/AlgaServerOptions:: to boot the server with. If not specified, a default one will be created.
ARGUMENT:: clock
The emphasis::Clock:: for the internal link::Classes/AlgaScheduler::. If not specified, a default link::Classes/TempoClock:: will be created.

METHOD:: quit
Quit emphasis::Alga::.
ARGUMENT:: onQuit
Execute a link::Classes/Function:: on quit.
ARGUMENT:: server
The link::Classes/Server:: to quit emphasis::Alga:: from.

METHOD:: startup
Add a startup file to be executed while emphasis::Alga:: is booting.

METHOD:: maxIO
Change the maximum number of IO connections between link::Classes/AlgaNode::s. This requires the emphasis::initSynthDefs:: method to re-compile all the necessary link::Classes/AlgaSynthDef::s. The default value is 8.
ARGUMENT:: value
The new value. Must be an link::Classes/Integer::.

METHOD:: maxEnvPoints
Change the maximum number of points allowed for an link::Classes/Env:: used as code::interpShape:: of a module.
ARGUMENT:: value
The new value. Must be an link::Classes/Integer::.

METHOD:: initSynthDefs
Force the recompilation of all link::Classes/AlgaSynthDef::s necessary for link::Classes/Alga::'s runtime. This needs to be executed only once anytime the value of emphasis::maxIO:: changes. Before emphasis::boot::, link::Classes/Alga:: already checks that everything is correct.

METHOD:: synthDescLib
Return emphasis::Alga::'s link::Classes/SynthDescLib::.

METHOD:: readAll
Read all the link::Classes/AlgaSynthDef::s in the path recursively. These must have been stored with the code::write::, code::writeDefFile::, code::load:: or code::store:: methods.

METHOD:: algaRead
Alias for code::readAll::.

METHOD:: readDef
Read a single link::Classes/AlgaSynthDef:: or all the link::Classes/AlgaSynthDef::s in the path non-recursively. These must have been stored with the code::write::, code::writeDefFile::, code::load:: or code::store:: methods.

METHOD:: algaReadDef
Alias for code::readDef::.

METHOD:: interpolateTempo
Interpolate the code::tempo:: of the link::Classes/Clock:: that emphasis::Alga:: is using over to a new value. This will affect all the nodes on the emphasis::Alga:: instance.
ARGUMENT:: tempo
The new tempo
ARGUMENT:: time
The time in seconds that the interpolation process will take
ARGUMENT:: shape
An optional link::Classes/Env:: to determine the shape of the interpolation.
ARGUMENT:: delta
Specify the resolution of the tempo change: how often should the tempo value be updated?
ARGUMENT:: schedInSeconds
Specify if the code::sched:: argument should be considered in seconds instead of beats / bars.
ARGUMENT:: sched
When the interpolation should be triggered
ARGUMENT:: server
The server used for the specific emphasis::Alga:: instance.

discussion::
code::
(
Alga.boot({
	a = AP((
		def: { SinOsc.ar * EnvPerc.ar(release: 0.1 * \tempo.kr(1)) },
		tempo: Pfunc { Alga.clocks[Server.default].tempo.reciprocal }
	)).play(chans: 2)
})
)

//10 times faster
Alga.interpTempo(tempo: 10, time: 5)

//Using a shape
Alga.interpTempo(tempo: 3, time: 8, shape: Env([0, 1, 0, 1], [1, 2, 3]))
::

METHOD:: interpTempo
Alias for code::interpolateTempo::


private:: clearAllSchedulers
private:: clearScheduler
private:: clearServer
private:: getScheduler
private:: newScheduler
private:: newServer
private:: schedulers
private:: servers
private:: clock
private:: clocks
private:: newClock
private:: oldSynthDefsDir
private:: restoreSynthDefsDir
private:: setAlgaSynthDefsDir
private:: checkAlgaAudioControl
private:: addParGroupOnServerTree
private:: checkAlgaUGens
private:: debug
private:: parGroup
private:: parGroups
private:: quitServerAndClear
private:: setSupernova
private:: supernova
private:: supernovas
private:: interpTempoRoutines
private:: addAlgaSilent
private:: booted
private:: readAlgaSynthDefs